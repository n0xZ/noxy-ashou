// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade,onUpdate: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}


model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  isContentPublic Boolean @default(false)
  accounts      Account[]
  sessions      Session[]
projects Project[]
}

model Project{
  id           String    @id @default(cuid())
  name String
  description String?
  siteUrl String
    createdAt DateTime @default(now())
  user User @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  projectId String
  registries Registry[]
}
model Registry{
    id         String    @id @default(cuid())
  fcpScore String
  lcpScore String
  clsScore String
  siScore String
  blockingTimeScore String
  ttiScore String
  createdAt DateTime @default(now())
  registryId String
  project Project @relation(fields: [registryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
